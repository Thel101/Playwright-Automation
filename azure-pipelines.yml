trigger:
  - main

pool:
  vmImage: 'windows-latest'

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  # Use pipeline variables instead of environment variables
  # Configure these in Azure DevOps Pipeline settings:
  # AZURE_PAT: $(AUTOMATION_PAT)  # Marked as secret
  # TEST_PLAN_ID: 3161
  # PROJECT_NAME: Board

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: $(npm_config_cache)
  displayName: Cache npm packages

- script: |
    npm ci
    npx playwright install --with-deps
  displayName: 'Install dependencies and browsers'

- script: |
    npx playwright test tests/global.setup.js --project=setup
  displayName: 'Run Authentication Setup'
  env:
    CI: 'true'

- script: |
    npx playwright test
  displayName: 'Run Playwright Tests'
  env:
    CI: 'true'

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: 'test-results/junit-results.xml'
    testRunTitle: 'Playwright Tests'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

# Publish test results to Test Plans using generic service connection
- task: PublishToAzureTestPlans@4
  inputs:
    testRunner: 'JUnit'
    testResultsFiles: 'test-results/junit-results.xml'
    testPlanId: '3161'
    testSuite: '$(System.TeamProject)'
    testConfigurations: |
      - Chrome
      - Edge
      - Firefox
      - Safari
    connectedServiceName: 'TestPlansConnection'  # Use your generic service connection name
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

- task: PublishPipelineArtifact@1
  condition: succeededOrFailed()
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/playwright-report'
    artifact: 'playwright-report'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  condition: failed()
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/test-results'
    artifact: 'test-results'
    publishLocation: 'pipeline'
